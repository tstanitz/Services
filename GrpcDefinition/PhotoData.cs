// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PhotoData.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcDefinition {

  /// <summary>Holder for reflection information generated from PhotoData.proto</summary>
  public static partial class PhotoDataReflection {

    #region Descriptor
    /// <summary>File descriptor for PhotoData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PhotoDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9QaG90b0RhdGEucHJvdG8iTAoTUGhvdG9TZXRzRGF0YVJlc3VsdBIhCglQ",
            "aG90b1NldHMYASABKAsyDi5QaG90b1NldHNEYXRhEhIKCkFjdGlvbk5hbWUY",
            "AiABKAkiMAoNUGhvdG9TZXRzRGF0YRIfCghQaG90b1NldBgBIAMoCzINLlBo",
            "b3RvU2V0RGF0YSKVAQoMUGhvdG9TZXREYXRhEgoKAklkGAEgASgJEg8KB1By",
            "aW1hcnkYAiABKAkSGwoFVGl0bGUYAyABKAsyDC5Db250ZW50RGF0YRIhCgtE",
            "ZXNjcmlwdGlvbhgEIAEoCzIMLkNvbnRlbnREYXRhEhMKC0RhdGVfQ3JlYXRl",
            "GAUgASgJEhMKC0RhdGVfVXBkYXRlGAYgASgJIh8KC0NvbnRlbnREYXRhEhAK",
            "CF9Db250ZW50GAEgASgJIgkKB1JlcXVlc3QiGQoJU2VuZEltYWdlEgwKBGRh",
            "dGEYASABKAwiGgoIUmVzcG9uc2USDgoGbGVuZ3RoGAEgASgFMpcBCg1Db250",
            "ZW50U2VydmVyEi4KCkdldENvbnRlbnQSCC5SZXF1ZXN0GhQuUGhvdG9TZXRz",
            "RGF0YVJlc3VsdCIAEiYKC1VwbG9hZEltYWdlEgouU2VuZEltYWdlGgkuUmVz",
            "cG9uc2UiABIuChFVcGxvYWRJbWFnZVN0cmVhbRIKLlNlbmRJbWFnZRoJLlJl",
            "c3BvbnNlIgAoAUIRqgIOR3JwY0RlZmluaXRpb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDefinition.PhotoSetsDataResult), global::GrpcDefinition.PhotoSetsDataResult.Parser, new[]{ "PhotoSets", "ActionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDefinition.PhotoSetsData), global::GrpcDefinition.PhotoSetsData.Parser, new[]{ "PhotoSet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDefinition.PhotoSetData), global::GrpcDefinition.PhotoSetData.Parser, new[]{ "Id", "Primary", "Title", "Description", "DateCreate", "DateUpdate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDefinition.ContentData), global::GrpcDefinition.ContentData.Parser, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDefinition.Request), global::GrpcDefinition.Request.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDefinition.SendImage), global::GrpcDefinition.SendImage.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDefinition.Response), global::GrpcDefinition.Response.Parser, new[]{ "Length" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PhotoSetsDataResult : pb::IMessage<PhotoSetsDataResult> {
    private static readonly pb::MessageParser<PhotoSetsDataResult> _parser = new pb::MessageParser<PhotoSetsDataResult>(() => new PhotoSetsDataResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PhotoSetsDataResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDefinition.PhotoDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoSetsDataResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoSetsDataResult(PhotoSetsDataResult other) : this() {
      PhotoSets = other.photoSets_ != null ? other.PhotoSets.Clone() : null;
      actionName_ = other.actionName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoSetsDataResult Clone() {
      return new PhotoSetsDataResult(this);
    }

    /// <summary>Field number for the "PhotoSets" field.</summary>
    public const int PhotoSetsFieldNumber = 1;
    private global::GrpcDefinition.PhotoSetsData photoSets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcDefinition.PhotoSetsData PhotoSets {
      get { return photoSets_; }
      set {
        photoSets_ = value;
      }
    }

    /// <summary>Field number for the "ActionName" field.</summary>
    public const int ActionNameFieldNumber = 2;
    private string actionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionName {
      get { return actionName_; }
      set {
        actionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PhotoSetsDataResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PhotoSetsDataResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PhotoSets, other.PhotoSets)) return false;
      if (ActionName != other.ActionName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (photoSets_ != null) hash ^= PhotoSets.GetHashCode();
      if (ActionName.Length != 0) hash ^= ActionName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (photoSets_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PhotoSets);
      }
      if (ActionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActionName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (photoSets_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhotoSets);
      }
      if (ActionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PhotoSetsDataResult other) {
      if (other == null) {
        return;
      }
      if (other.photoSets_ != null) {
        if (photoSets_ == null) {
          photoSets_ = new global::GrpcDefinition.PhotoSetsData();
        }
        PhotoSets.MergeFrom(other.PhotoSets);
      }
      if (other.ActionName.Length != 0) {
        ActionName = other.ActionName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (photoSets_ == null) {
              photoSets_ = new global::GrpcDefinition.PhotoSetsData();
            }
            input.ReadMessage(photoSets_);
            break;
          }
          case 18: {
            ActionName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PhotoSetsData : pb::IMessage<PhotoSetsData> {
    private static readonly pb::MessageParser<PhotoSetsData> _parser = new pb::MessageParser<PhotoSetsData>(() => new PhotoSetsData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PhotoSetsData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDefinition.PhotoDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoSetsData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoSetsData(PhotoSetsData other) : this() {
      photoSet_ = other.photoSet_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoSetsData Clone() {
      return new PhotoSetsData(this);
    }

    /// <summary>Field number for the "PhotoSet" field.</summary>
    public const int PhotoSetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcDefinition.PhotoSetData> _repeated_photoSet_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcDefinition.PhotoSetData.Parser);
    private readonly pbc::RepeatedField<global::GrpcDefinition.PhotoSetData> photoSet_ = new pbc::RepeatedField<global::GrpcDefinition.PhotoSetData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcDefinition.PhotoSetData> PhotoSet {
      get { return photoSet_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PhotoSetsData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PhotoSetsData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!photoSet_.Equals(other.photoSet_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= photoSet_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      photoSet_.WriteTo(output, _repeated_photoSet_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += photoSet_.CalculateSize(_repeated_photoSet_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PhotoSetsData other) {
      if (other == null) {
        return;
      }
      photoSet_.Add(other.photoSet_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            photoSet_.AddEntriesFrom(input, _repeated_photoSet_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PhotoSetData : pb::IMessage<PhotoSetData> {
    private static readonly pb::MessageParser<PhotoSetData> _parser = new pb::MessageParser<PhotoSetData>(() => new PhotoSetData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PhotoSetData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDefinition.PhotoDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoSetData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoSetData(PhotoSetData other) : this() {
      id_ = other.id_;
      primary_ = other.primary_;
      Title = other.title_ != null ? other.Title.Clone() : null;
      Description = other.description_ != null ? other.Description.Clone() : null;
      dateCreate_ = other.dateCreate_;
      dateUpdate_ = other.dateUpdate_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoSetData Clone() {
      return new PhotoSetData(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Primary" field.</summary>
    public const int PrimaryFieldNumber = 2;
    private string primary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Primary {
      get { return primary_; }
      set {
        primary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 3;
    private global::GrpcDefinition.ContentData title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcDefinition.ContentData Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private global::GrpcDefinition.ContentData description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcDefinition.ContentData Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }

    /// <summary>Field number for the "Date_Create" field.</summary>
    public const int DateCreateFieldNumber = 5;
    private string dateCreate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DateCreate {
      get { return dateCreate_; }
      set {
        dateCreate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Date_Update" field.</summary>
    public const int DateUpdateFieldNumber = 6;
    private string dateUpdate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DateUpdate {
      get { return dateUpdate_; }
      set {
        dateUpdate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PhotoSetData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PhotoSetData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Primary != other.Primary) return false;
      if (!object.Equals(Title, other.Title)) return false;
      if (!object.Equals(Description, other.Description)) return false;
      if (DateCreate != other.DateCreate) return false;
      if (DateUpdate != other.DateUpdate) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Primary.Length != 0) hash ^= Primary.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (DateCreate.Length != 0) hash ^= DateCreate.GetHashCode();
      if (DateUpdate.Length != 0) hash ^= DateUpdate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Primary.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Primary);
      }
      if (title_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Title);
      }
      if (description_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Description);
      }
      if (DateCreate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DateCreate);
      }
      if (DateUpdate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DateUpdate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Primary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Primary);
      }
      if (title_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
      }
      if (description_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Description);
      }
      if (DateCreate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DateCreate);
      }
      if (DateUpdate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DateUpdate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PhotoSetData other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Primary.Length != 0) {
        Primary = other.Primary;
      }
      if (other.title_ != null) {
        if (title_ == null) {
          title_ = new global::GrpcDefinition.ContentData();
        }
        Title.MergeFrom(other.Title);
      }
      if (other.description_ != null) {
        if (description_ == null) {
          description_ = new global::GrpcDefinition.ContentData();
        }
        Description.MergeFrom(other.Description);
      }
      if (other.DateCreate.Length != 0) {
        DateCreate = other.DateCreate;
      }
      if (other.DateUpdate.Length != 0) {
        DateUpdate = other.DateUpdate;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Primary = input.ReadString();
            break;
          }
          case 26: {
            if (title_ == null) {
              title_ = new global::GrpcDefinition.ContentData();
            }
            input.ReadMessage(title_);
            break;
          }
          case 34: {
            if (description_ == null) {
              description_ = new global::GrpcDefinition.ContentData();
            }
            input.ReadMessage(description_);
            break;
          }
          case 42: {
            DateCreate = input.ReadString();
            break;
          }
          case 50: {
            DateUpdate = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContentData : pb::IMessage<ContentData> {
    private static readonly pb::MessageParser<ContentData> _parser = new pb::MessageParser<ContentData>(() => new ContentData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContentData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDefinition.PhotoDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentData(ContentData other) : this() {
      Content_ = other.Content_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentData Clone() {
      return new ContentData(this);
    }

    /// <summary>Field number for the "_Content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string Content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return Content_; }
      set {
        Content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContentData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContentData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContentData other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDefinition.PhotoDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class SendImage : pb::IMessage<SendImage> {
    private static readonly pb::MessageParser<SendImage> _parser = new pb::MessageParser<SendImage>(() => new SendImage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDefinition.PhotoDataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendImage(SendImage other) : this() {
      data_ = other.data_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendImage Clone() {
      return new SendImage(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendImage other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDefinition.PhotoDataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      length_ = other.length_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 1;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Length != other.Length) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Length != 0) hash ^= Length.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Length != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Length);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Length = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
